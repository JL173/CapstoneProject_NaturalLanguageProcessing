setwd("C:/Users/JL/Desktop/Study/Coursera/Johns Hopkins Data Science/10 capstone/CapstoneProject_NaturalLanguageProcessing")
library(tidyverse)
library(tidytext)
library(tm)
library(ggthemes)
library(openNLP)
library(R.utils)
library(data.table)
source("C:/Users/JL/Desktop/Study/Coursera/Johns Hopkins Data Science/10 capstone/CapstoneProject_NaturalLanguageProcessing/helper2.R")
base_twitter <- LoadSingleFile("data/en_US/25/en_US.twitter.25.txt", SOS = TRUE, EOS = TRUE)
twitter_unigrams <- CleanTokens(base, n = 1) %>%
WordFreq() %>%
filter(freq > 2)
base <- LoadSingleFile("data/en_US/25/en_US.twitter.25.txt", SOS = TRUE, EOS = TRUE)
twitter_unigrams <- CleanTokens(base, n = 1) %>%
WordFreq() %>%
filter(freq > 2)
twitter_bigrams <- CleanTokens(base, n = 2) %>%
WordFreq() %>%
filter(freq > 1)
twitter_trigrams <- CleanTokens(base, n = 3) %>%
WordFreq() %>%
filter(freq > 1)
twitter_quagrams <- CleanTokens(base, n = 4) %>%
WordFreq() %>%
filter(freq > 1)
twitter_model <- CreateFreqTable(twitter_unigrams,
twitter_bigrams,
twitter_trigrams,
twitter_quagrams)
save(twitter_model, file = "models/twitter_freq_model.RDa")
shiny::runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
base_news <- LoadSingleFile("data/en_US/25/en_US.news.25.txt", SOS = TRUE, EOS = TRUE)
news_unigrams <- CleanTokens(base_news, n = 1) %>%
WordFreq() %>%
filter(freq > 2)
news_bigrams <- CleanTokens(base_news, n = 2) %>%
WordFreq() %>%
filter(freq > 1)
news_trigrams <- CleanTokens(base_news, n = 3) %>%
WordFreq() %>%
filter(freq > 1)
news_quagrams <- CleanTokens(base_news, n = 4) %>%
WordFreq() %>%
filter(freq > 1)
news_model <- CreateFreqTable(news_unigrams,
news_bigrams,
news_trigrams,
news_quagrams)
save(news_model, file = "models/news_freq_model.RDa")
base_blogs <- LoadSingleFile("data/en_US/25/en_US.blogs.25.txt", SOS = TRUE, EOS = TRUE)
blogs_unigrams <- CleanTokens(base_blogs, n = 1) %>%
WordFreq() %>%
filter(freq > 2)
blogs_bigrams <- CleanTokens(base_blogs, n = 2) %>%
WordFreq() %>%
filter(freq > 1)
blogs_trigrams <- CleanTokens(base_blogs, n = 3) %>%
WordFreq() %>%
filter(freq > 1)
blogs_quagrams <- CleanTokens(base_blogs, n = 4) %>%
WordFreq() %>%
filter(freq > 1)
blogs_model <- CreateFreqTable(blogs_unigrams,
blogs_bigrams,
blogs_trigrams,
blogs_quagrams)
save(blogs_model, file = "models/blogs_freq_model.RDa")
runApp('TextPredictiveModel_APP')
runApp()
runApp()
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
Predict("from the bottom", lyrics_model, ngram = 3, gamma = 0.3) %>% head(20)
load("models/lyrics_freq_model.RDa")
Predict("from the bottom", lyrics_model, ngram = 3, gamma = 0.3) %>% head(20)
View(lyrics_model)
Predict("from the bottom", lyrics_model, ngram = 2, gamma = 0.3) %>% head(20)
Predict("from the bottom", lyrics_model, ngram = 1, gamma = 0.3) %>% head(20)
Predict("from the bottom", lyrics_model, ngram = 0, gamma = 0.3) %>% head(20)
Predict("from the bottom", lyrics_model, ngram = 1, gamma = 0.3) %>% head(20)
Predict("from the bottom", news_model, ngram = 1, gamma = 0.3) %>% head(20)
Predict("from the bottom", news_model, ngram = 2, gamma = 0.3) %>% head(20)
results <- Predict("from the bottom", news_model, ngram = 2, gamma = 0.3) %>% head(20)
results
ggplot(results) + geom_bar(word, P)
ggplot(results) + geom_bar(aes(word, P))
ggplot(results) + geom_col(aes(x = word, y = P))
ggplot(results) + geom_bar(aes(x = word, y = P))
ggplot(results) + geombar(aes(x = word, y = P))
#ggplot(results) +
barplot(aes(x = word, y = P))
ggplot(results) + barplot(aes(x = word, y = P))
ggplot(results) + geom_col(aes(x = word, y = P), orientation = "y")
ggplot(results) + geom_col(aes(x = word, y = P), orientation = "x")
ggplot(results) + geom_col(aes(y = word, x = P), orientation = "y")
ggplot(results) + geom_col(aes(y = word, x = P),
colour = 'lightblue',
orientation = "y")
ggplot(results) + geom_col(aes(y = word, x = P),
colour = 'lightblue',
fill = 'darkblue',
orientation = "y")
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
results <- Predict("from the bottom", news_model, ngram = 2, gamma = 0.3) %>% arrange(desc(P)) %>% head(5)
results
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = TRUE)])
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
labels(title = "Predictions", xlab = "Next Word", ylab = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results) + geom_col(aes(y = word, x = P),
fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = -0.2)
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = -0.2)
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = -0.5)
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = -1)
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = 0)
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = 0.5)
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
geom_text(aes(label = P), vjust = 0.2)
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
#labels(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
labs(title = "Predictions", x = "Next Word", y = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y")
labs(title = "Predictions", y = "Next Word", x = "Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions") +
ylab("Next Word") + xlab("Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "er")
#ylab("Next Word") + xlab("Probability")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
theme_economist()
ggplot(results, aes(y = word, x = P)) +
geom_col(fill = 'lightblue',
colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
theme_economist()
ggplot(results, aes(y = word, x = P)) +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
theme_fivethirtyeight()
scale_color_gdocs()
ggplot(results, aes(y = word, x = P)) +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_fivethirtyeight() +
scale_color_gdocs() +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_economist() +
scale_color_gdocs() +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_economist_white() +
scale_color_gdocs() +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_fivethirtyeight() +
scale_color_fivethirtyeight() +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_fivethirtyeight() +
scale_color_gdocs() +
geom_col(#fill = 'lightblue',
#colour = 'darkblue',
orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_fivethirtyeight() +
scale_color_gdocs() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_foundation() +
scale_color_gdocs() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_hc() +
scale_color_gdocs() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_stata() +
scale_color_gdocs() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
scale_color_gdocs() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
wsj_pal() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
wsj_pal()() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
wsj_pal()(n = 5) +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_few() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_excel_new() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_excel() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_few() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_calc() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_calc() +
scale_fill_calc() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
scale_fill_wsj() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
scale_fill_hc() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
scale_fill_gradient_tableau() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
scale_fill_tableau() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
results$word <- factor(results$word, levels = results$word[order(results$P, decreasing = FALSE)])
ggplot(results, aes(y = word, x = P)) +
theme_wsj() +
scale_fill_tableau() +
scale_colour_tableau() +
geom_col(orientation = "y") +
labs(title = "Predictions", x = "Probability", y = "Next Word")
runApp('TextPredictiveModel_APP')
