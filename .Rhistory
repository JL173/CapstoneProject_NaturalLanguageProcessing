setwd("C:/Users/JL/Desktop/Study/Coursera/Johns Hopkins Data Science/10 capstone/CapstoneProject_NaturalLanguageProcessing")
library(tidyverse)
library(tidytext)
library(tm)
library(ggthemes)
library(openNLP)
library(R.utils)
library(data.table)
source("C:/Users/JL/Desktop/Study/Coursera/Johns Hopkins Data Science/10 capstone/CapstoneProject_NaturalLanguageProcessing/helper2.R")
load("output/full_unigram.RDa")
unigram_ <- unigram_ %>% filter(freq > 1)
load("output/full_bigram.Rda")
bigram_ <- bigram_ %>% filter(freq > 1)
load("output/full_trigram.Rda")
trigram_ <- trigram_ %>% filter(freq > 1)
load("output/full_quagram.RDa")
quagram_ <- quagram_ %>% filter(freq > 1)
en_US_model <- CreateFreqTable(unigram_,
bigram_,
trigram_,
quagram_)
save(en_US_model, file = "models/en_US_freq_model.RDa")
# sticking two models together
load("models/imdb_freq_model.RDa")
merged_model <- rbind(en_US_model, imdb_model) %>%
group_by(word1, word2, word3, word4) %>%
summarise(freq = sum(freq))
for (string in test_strings2){
results <- Predict(string, merged_model, ngram = 3, gamma = 0.3) %>% head(20)
print(results)
}
# coursera quiz predictions
test_strings2 <- c("When you breathe, I want to be the air for you. I'll be there for you, I'd live and I'd", "Guy at my table's wife got up to go to the bathroom and I asked about dessert and he started telling me about his", "I'd give anything to see arctic monkeys this", "Talking to your mom has the same effect as a hug and helps reduce your", "When you were in Holland you were like 1 inch away from me but you hadn't time to take a", "I'd just like all of these questions answered, a presentation of evidence, and a jury to settle the", "I can't deal with unsymetrical things. I can't even hold an uneven number of bags of groceries in each", "Every inch of you is perfect from the bottom to the", "Iâ€™m thankful my childhood was filled with imagination and bruises from playing", "I like how the same people are in almost all of Adam Sandler's")
for (string in test_strings2){
results <- Predict(string, merged_model, ngram = 3, gamma = 0.3) %>% head(20)
print(results)
}
View(merged_model)
for (string in test_strings2){
gc()
results <- Predict(string, merged_model, ngram = 3, gamma = 0.3) %>% head(20)
print(results)
}
for (string in test_strings2){
results <- Predict(string, merged_model, ngram = 3, gamma = 0.3) %>% head(20)
print(results)
}
merged_model <- rbind(en_US_model, imdb_model) %>%
group_by(word1, word2, word3, word4) %>%
summarise(freq = sum(freq)) %>%
ungroup()
for (string in test_strings2){
results <- Predict(string, merged_model, ngram = 3, gamma = 0.3) %>% head(20)
print(results)
}
