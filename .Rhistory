setwd("C:/Users/JL/Desktop/Study/Coursera/Johns Hopkins Data Science/10 capstone/CapstoneProject_NaturalLanguageProcessing")
shiny::runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
?StringTailngram
StringTailngram()
View(StringTailngram)
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
load("models/lyrics_freq_model.RDa")
View(lyrics_model)
load("models/imdb_freq_model.RDa")
View(imdb_model)
lyrics <- LoadSingleFile("data/ARTISTS/")
lyrics <- LoadFile("data/ARTISTS/")
lyrics <- LoadFiles("data/ARTISTS/")
lyrics_unigrams <- lapply(lyrics, CleanTokens, n = 1, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 1)
View(lyrics)
filter <- read_table("text_filter.txt")
View(filter)
?read_table
filter <- read_table("text_filter.txt", col_names = FALSE)
colnames(filter) <- "word"
lyrics_unigrams <- lapply(lyrics, CleanTokens, n = 1, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 1)
lyrics_bigrams <- lapply(lyrics, CleanTokens, n = 2, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 1)
lyrics_trigrams <- lapply(lyrics, CleanTokens, n = 3, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 1)
lyrics_quagrams <- lapply(lyrics, CleanTokens, n = 4, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 1)
View(lyrics_bigrams)
secondfilter <- function(df){
df <- df %>% filter(!grep("nigg"))
df
}
View(secondfilter(lyrics_unigrams))
secondfilter <- function(df){
df <- df %>% filter(!grep("nigg", word))
df
}
View(secondfilter(lyrics_unigrams))
secondfilter <- function(df){
df <- df %>%
filter(!str_detect(word, "nigg")) %>%
filter(!str_detect(word, "fuck"))
df
}
View(secondfilter(lyrics_unigrams))
View(lyrics_model)
View(lyrics_quagrams)
lyrics_model <- CreateFreqTable(secondfilter(lyrics_unigrams),
secondfilter(lyrics_bigrams),
secondfilter(lyrics_trigrams),
secondfilter(lyrics_quagrams))
#save(lyrics_model, file = "models/lyrics_freq_model.RDa")
View(lyrics_model)
save(lyrics_model, file = "models/lyrics_freq_model.RDa")
runApp('TextPredictiveModel_APP')
View(lyrics_model)
lyrics_model <- lyrics_model %>% filter(freq>2)
lyrics_model <- lyrics_model %>% filter(freq>3)
lyrics_unigrams <- lapply(lyrics, CleanTokens, n = 1, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 5)
lyrics_bigrams <- lapply(lyrics, CleanTokens, n = 2, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 3)
lyrics_trigrams <- lapply(lyrics, CleanTokens, n = 3, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 3)
lyrics_quagrams <- lapply(lyrics, CleanTokens, n = 4, filter_df = filter) %>%
MergeDTM() %>%
WordFreq() %>%
filter(freq > 3)
lyrics_model <- CreateFreqTable(secondfilter(lyrics_unigrams),
secondfilter(lyrics_bigrams),
secondfilter(lyrics_trigrams),
secondfilter(lyrics_quagrams))
#save(lyrics_model, file = "models/lyrics_freq_model.RDa")
save(lyrics_model, file = "models/lyrics_freq_model.RDa")
View(imdb_model)
load("models/imdb_freq_model.RDa") # imdb_model
load("models/lyrics_freq_model.RDa") # lyics_model
load("models/twitter_freq_model.RDa") # twitter_model
load("models/news_freq_model.RDa") # news_model
load("models/blogs_freq_model.RDa") # blogs_model
merged_model <- rbind(twitter_model, news_model, blogs_model, imdb_model, lyrics_model) %>%
group_by(word1, word2, word3, word4) %>%
summarise(freq = sum(freq)) %>%
ungroup()
save(merged_model, file = "models/merged_model.RDa")
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp()
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
runApp('TextPredictiveModel_APP')
